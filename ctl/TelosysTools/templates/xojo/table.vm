#if ( $databases.hasDatabase($model.databaseId) )
#set ( $database = $databases.getDatabase($model.databaseId) )
#set ( $dbname = $database.name)
#else
#set ( $dbname = "" )
#end
## Predefine Embed Macros
#parse ("embeds.vm")
#set ( $ncolor = "default" )
#set ( $num = 0 )
#parse ("parameter.vm")
#set ( $template = "table" )
##----
##foreach($entity in $selectedEntities)
##EntityName : $entity.name
##end
##----
##Variables:
##----------
###foreach( $var in $project.allVariables )
##$var.name = $var.value
###end
##----
#tag Window
#set ( $tableshort = ${entity.databaseTable.replace("_","")} )
Begin Window Table_${tableshort}
   BackColor       =   &cFFFFFF00
   Backdrop        =   0
   CloseButton     =   True
   Compatibility   =   ""
   Composite       =   False
   Frame           =   0
   FullScreen      =   False
   FullScreenButton=   False
   HasBackColor    =   False
   Height          =   400
   ImplicitInstance=   True
   LiveResize      =   True
   MacProcID       =   0
   MaxHeight       =   32000
   MaximizeButton  =   True
   MaxWidth        =   32000
   MenuBar         =   0
   MenuBarVisible  =   True
   MinHeight       =   64
   MinimizeButton  =   True
   MinWidth        =   64
   Placement       =   0
   Resizeable      =   True
   Title           =   "${entity.databaseTable} Table"
   Visible         =   True
   Width           =   600
   Begin Listbox DataList
      AutoDeactivate  =   True
      AutoHideScrollbars=   True
      Bold            =   False
      Border          =   True
      ColumnCount     =   3
      ColumnsResizable=   False
      ColumnWidths    =   ""
      DataField       =   ""
      DataSource      =   ""
      DefaultRowHeight=   -1
      Enabled         =   True
      EnableDrag      =   False
      EnableDragReorder=   False
      GridLinesHorizontal=   0
      GridLinesVertical=   0
      HasHeading      =   True
      HeadingIndex    =   -1
      Height          =   360
      HelpTag         =   ""
      Hierarchical    =   False
      Index           =   -2147483648
      InitialParent   =   ""
      InitialValue    =   ""
      Italic          =   False
      Left            =   20
      LockBottom      =   True
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   True
      LockTop         =   True
      RequiresSelection=   False
      Scope           =   0
      ScrollbarHorizontal=   True
      ScrollBarVertical=   True
      SelectionType   =   0
      ShowDropIndicator=   False
      TabIndex        =   0
      TabPanelIndex   =   0
      TabStop         =   True
      TextFont        =   "System"
      TextSize        =   0.0
      TextUnit        =   0
      Top             =   20
      Transparent     =   False
      Underline       =   False
      UseFocusRing    =   True
      Visible         =   True
      Width           =   560
      _ScrollOffset   =   0
      _ScrollWidth    =   -1
   End
End
#tag EndWindow

#tag WindowCode
	#tag Method, Flags = &h0
		Sub myOpen()
		  '
		  ' #embed( "TABLE Opening window" )	
		  ' -+-
		  ' set headings
		  '
		  DataList.HasHeading = True
		 	DataList.ColumnCount = 99
		  '
#set ($counter = 0)
#foreach( $field in $entity.attributes )
			DataList.Heading($counter) = "$field.databaseName"  					' $field.databaseType ($field.databaseSize)
#if ( $field.databaseTypeWithSize=="DOUBLE" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10  
#end
#if ( $field.databaseTypeWithSize=="DECIMAL" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10  
#end
#if ( $field.databaseTypeWithSize=="DATE" )
			DataList.ColumnAlignment($counter) = DataList.AlignCenter
#end
#if ( $field.databaseTypeWithSize=="DATETIME" )
			DataList.ColumnAlignment($counter) = DataList.AlignCenter
#end
#if ( $field.databaseTypeWithSize=="TIMESTAMP" )
			DataList.ColumnAlignment($counter) = DataList.AlignCenter
#end
#if ( $field.databaseTypeWithSize=="YEAR" )
			DataList.ColumnAlignment($counter) = DataList.AlignCenter
#end
#if ( $field.databaseTypeWithSize=="DOUBLE" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10
#end
#if ( $field.databaseTypeWithSize=="SMALLINT" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10
#end
#if ( $field.databaseTypeWithSize=="SMALLINT UNSIGNED" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10
#end
#if ( $field.databaseTypeWithSize=="MEDIUMINT" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10
#end
#if ( $field.databaseTypeWithSize=="MEDIUMINT UNSIGNED" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10
#end
#if ( $field.databaseTypeWithSize=="SIMPLEINT" )
			DataList.ColumnAlignment($counter) = DataList.AlignRight
			DataList.ColumnAlignmentOffset($counter) = -10
#end
#if ( $field.databaseTypeWithSize=="BIT" )
			DataList.ColumnType(6) = ListBox.TypeCheckbox
		  DataList.ColumnAlignment(6) = DataList.AlignCenter
#end
#if ( $field.databaseTypeWithSize=="BOOLEAN" )
			DataList.ColumnType(6) = ListBox.TypeCheckbox
		  DataList.ColumnAlignment(6) = DataList.AlignCenter
#end

#set ( $counter = $counter + 1 )
#end
		  '
		  ' #embed( "TABLE After setting fields" )	
		  ' -+-
		  DataList.ColumnCount = $counter
		  DataList.ScrollBarHorizontal = True
		  DataList.ScrollBarVertical = True
		  '
		  ' fill rows
		  '
		  If Not g_connected Then
		    g_status = "Connect to the database first."
		    Return
		  End If
		  '
		  DataList.DeleteAllRows
		  '
		  g_sql = "SELECT * FROM ${entity.databaseTable};"
		  l_lastline = 0
		  '
		  Dim data As RecordSet
		  Dim ret As Boolean
		  '
		  ' dimension date fields (only yet)
		  '
#foreach( $field in $entity.attributes )
#if ( $field.databaseTypeWithSize=="DATE" )
			Dim d_$field.databaseName As New Date
#end
#if ( $field.databaseTypeWithSize=="DATETIME" )
			Dim d_$field.databaseName As New Date
#end
#if ( $field.databaseTypeWithSize=="TIMESTAMP" )
			Dim d_$field.databaseName As New Date
#end
#if ( $field.databaseTypeWithSize=="BIT" )
			Dim d_$field.databaseName As New CheckBox
#end
#if ( $field.databaseTypeWithSize=="BOOLEAN" )
			Dim d_$field.databaseName As New CheckBox
#end
#end
		  '
		  data = g_db.SQLSelect(g_sql)
		  
		  If g_db.Error Then
		    g_status = "DB Error: " + g_db.ErrorMessage
		    Return
		  End If
		  
		  If data <> Nil Then
		    While Not data.EOF
		      '
		      ' set date fields 
		      '
#foreach( $field in $entity.attributes )
#if ( $field.databaseTypeWithSize=="DATE" )
					d_$field.databaseName = data.Field("$field.databaseName").DateValue
		  		If d_$field.databaseName = Nil Then 
		    		ret = ParseDate("01/01/1900",d_$field.databaseName)
		  		End If
#end
#if ( $field.databaseTypeWithSize=="DATETIME" )
					d_$field.databaseName = data.Field("$field.databaseName").DateValue
		  		If d_$field.databaseName = Nil Then 
		    		ret = ParseDate("01/01/1900",d_$field.databaseName)
		  		End If
#end
#if ( $field.databaseTypeWithSize=="TIMESTAMP" )
					d_$field.databaseName = data.Field("$field.databaseName").DateValue
		  		If d_$field.databaseName = Nil Then 
		    		ret = ParseDate("01/01/1970",d_$field.databaseName)
		  		End If
#end
#end
		      '
     		  ' #embed( "TABLE Before adding rows to listbox" )	
     		  ' -+-
		      DataList.AddRow
		      '
#set ($counter = 0)
#foreach( $field in $entity.attributes )
#if ( $field.databaseType=="INT" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field ("$field.databaseName").IntegerValue)
#end
#if ( $field.databaseType=="TEXT" )
					DataList.Cell( DataList.LastIndex, $counter ) = data.Field("$field.databaseName").StringValue.DefineEncoding(encodings.utf8)
#end
#if ( $field.databaseType=="TINYTEXT" )
					DataList.Cell( DataList.LastIndex, $counter ) = data.Field("$field.databaseName").StringValue.DefineEncoding(encodings.utf8)
#end
#if ( $field.databaseType=="CHAR" )
					DataList.Cell( DataList.LastIndex, $counter ) = data.Field("$field.databaseName").StringValue.DefineEncoding(encodings.utf8)
#end
#if ( $field.databaseType=="DOUBLE" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").DoubleValue)
#end
#if ( $field.databaseType=="DECIMAL" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").DoubleValue)
#end
#if ( $field.databaseType=="SMALLINT" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="SMALLINT UNSIGNED" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="TINYINT UNSIGNED" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="MEDIUMINT" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="MEDIUMINT UNSIGNED" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="SIMPLEINT" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="VARCHAR" )
		      DataList.Cell( DataList.LastIndex, $counter ) = data.Field("$field.databaseName").StringValue.DefineEncoding(encodings.utf8)
#end
#if ( $field.databaseType=="DATE" )
		      DataList.Cell( DataList.LastIndex, $counter ) = d_${field.databaseName}.AbbreviatedDate
#end
#if ( $field.databaseType=="DATETIME" )
		      DataList.Cell( DataList.LastIndex, $counter ) = d_${field.databaseName}.ShortTime
#end
#if ( $field.databaseType=="TIMESTAMP" )
		      DataList.Cell( DataList.LastIndex, $counter ) = d_${field.databaseName}.ShortTime
#end
#if ( $field.databaseType=="YEAR" )
		      DataList.Cell( DataList.LastIndex, $counter ) = CStr(data.Field("$field.databaseName").Value)
#end
#if ( $field.databaseType=="BIT" )
		      DataList.CellCheck( DataList.LastIndex, $counter ) = data.Field("$field.databaseName").BooleanValue
#end
#set ( $counter = $counter + 1 )
#end
					'
		      l_Lastline = l_Lastline + 1
		      data.MoveNext
		    Wend
		    data.Close
		  End If
		  ''
 		  ' #embed( "TABLE After filling listbox" )	
 		  ' -+-
 		  '
		  DataList.Selected(l_ActiveLine) = True
		  
		End Sub
	#tag EndMethod

	#tag Property, Flags = &h0
		l_ActiveLine As Integer
	#tag EndProperty

	#tag Property, Flags = &h0
		l_Lastline As Integer
	#tag EndProperty
#tag EndWindowCode
#set ( $tableshort = ${entity.databaseTable.replace("_","")} )
#tag Events DataList
	#tag Event
		Sub Open()
		  l_ActiveLine = 0
		  myOpen
		End Sub
	#tag EndEvent
	#tag Event
		Sub DoubleClick()
		  Dim row As Integer
		  row = Me.RowFromXY(Me.MouseX - Me.Left , Me.MouseY - Me.Top)
		  Dim rv As New Record_${tableshort}
		  l_ActiveLine = row
		  rv.myShow(Val(DataList.Cell(row, 0)))
		End Sub
	#tag EndEvent
	#tag Event
		Sub KeyUp(Key As String)
		  ' MsgBox(Str(Asc(key)))
		  Select Case Asc(key)
		  Case 105,73, 63302
		    g_db.SQLExecute("INSERT INTO ${entity.databaseTable} () VALUES (); ")
		    If g_db.Error Then
		      MsgBox("Database Error: " + g_db.ErrorMessage)
		    End If
		    myOpen
		    Dim rv As New Record_${tableshort}
		    rv.myShow(Val(DataList.Cell(l_Lastline-1, 0)))
		    l_Activeline = l_Lastline-1
		  Case 100, 68, 127, 8
## Get the Primary Key
#set( $primary = "" )
#foreach( $attribute in $entity.keyAttributes )
#if( $foreach.count > 1 )
#set( $primary = "${primary}, " )
#end
#set( $primary = "${primary}${attribute.name}" )
#end
		    l_ActiveLine = DataList.ListIndex
		    g_db.SQLExecute("DELETE FROM ${entity.databaseTable} WHERE $primary=" + DataList.Cell(DataList.ListIndex, 0))
		    If g_db.Error Then
		      MsgBox("Database Error: " + g_db.ErrorMessage)
		    End If
		    l_ActiveLine = l_ActiveLine - 1
		    myOpen
		  Case 27
		    Self.close
		  Case 13 
		    l_ActiveLine = DataList.ListIndex
		    Dim rv As New Record_${tableshort}
		    rv.myShow(Val(DataList.Cell(DataList.ListIndex, 0)))
		  End Select
		End Sub
	#tag EndEvent
	#tag Event
		Sub GotFocus()
		  myOpen
		End Sub
	#tag EndEvent
#tag EndEvents
#tag ViewBehavior
	#tag ViewProperty
		Name="Name"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Interfaces"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Super"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Width"
		Visible=true
		Group="Size"
		InitialValue="600"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Height"
		Visible=true
		Group="Size"
		InitialValue="400"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinWidth"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinHeight"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxWidth"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxHeight"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Frame"
		Visible=true
		Group="Frame"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Document"
			"1 - Movable Modal"
			"2 - Modal Dialog"
			"3 - Floating Window"
			"4 - Plain Box"
			"5 - Shadowed Box"
			"6 - Rounded Window"
			"7 - Global Floating Window"
			"8 - Sheet Window"
			"9 - Metal Window"
			"11 - Modeless Dialog"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="Title"
		Visible=true
		Group="Frame"
		InitialValue="Untitled"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="CloseButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Resizeable"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaximizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinimizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreenButton"
		Visible=true
		Group="Frame"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Composite"
		Group="OS X (Carbon)"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MacProcID"
		Group="OS X (Carbon)"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="ImplicitInstance"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Placement"
		Visible=true
		Group="Behavior"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Default"
			"1 - Parent Window"
			"2 - Main Screen"
			"3 - Parent Window Screen"
			"4 - Stagger"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="Visible"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LiveResize"
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreen"
		Group="Behavior"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="HasBackColor"
		Visible=true
		Group="Background"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="BackColor"
		Visible=true
		Group="Background"
		InitialValue="&hFFFFFF"
		Type="Color"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Backdrop"
		Visible=true
		Group="Background"
		Type="Picture"
		EditorType="Picture"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBar"
		Visible=true
		Group="Menus"
		Type="MenuBar"
		EditorType="MenuBar"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBarVisible"
		Visible=true
		Group="Deprecated"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="l_ActiveLine"
		Group="Behavior"
		Type="Integer"
	#tag EndViewProperty
#tag EndViewBehavior
