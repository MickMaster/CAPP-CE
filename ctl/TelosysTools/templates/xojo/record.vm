#if ( $databases.hasDatabase($model.databaseId) )
#set ( $database = $databases.getDatabase($model.databaseId) )
#set ( $dbname = $database.name)
#else
#set ( $dbname = "" )
#end
## Predefine Embed Macros
#parse ("embeds.vm")
#parse ("parameter.vm")
## Predefines 
#set ( $ncolor = "default" )
#set ( $num = 0 )
#set ( $template = "record" )
#set ( $winheight = 19 )
#set ( $addheight = 0 )
##----- Field loop start --------
#foreach( $field in $entity.attributes )
#set ( $height = "0" )
#set ( $addh = 0 )
#if ( $height != "0" )
#set ( $addheight = $addh - 19 )
#end
##----- Field loop end --------
#set ( $winheight = $winheight + 25 )
#end
#set ( $winheight = $winheight + 25 + $addheight )
##---------
##set ( $fieldname = ${field.databaseName} )
##set ( ${fieldname} = ${fieldname.replace(" ","")} )
##---------
#tag Window
Begin Window RecordView
   BackColor       =   &cFFFFFF00
   Backdrop        =   0
   CloseButton     =   True
   Compatibility   =   ""
   Composite       =   False
   Frame           =   0
   FullScreen      =   False
   FullScreenButton=   False
   HasBackColor    =   False
   Height          =   ${winheight}
   ImplicitInstance=   True
   LiveResize      =   True
   MacProcID       =   0
   MaxHeight       =   32000
   MaximizeButton  =   True
   MaxWidth        =   32000
   MenuBar         =   0
   MenuBarVisible  =   True
   MinHeight       =   64
   MinimizeButton  =   True
   MinWidth        =   64
   Placement       =   0
   Resizeable      =   True
   Title           =   "${entity.databaseTable} Record"
   Visible         =   True
   Width           =   403
## Get the Primary Key
#set( $primary = "" )
#set ( $munch = "..." )
#set ( $rowcoord = 19 )
#set ( $tabindex = 2 )
#foreach( $field in $entity.attributes )
#set ( $addheight = 0 )
#set ( $height = "0" )
#set ( $label = "${field.databaseName}" )
#if ( $field.isKeyElement() )
#set ( $primary = $field.databaseName )
#end
#if ( $field.databaseName.toUpperCase() == $primary.toUpperCase() )
#set ($readonly = "True")
#else
#set ($readonly = "False")
#end
#parse ("field.vm")
#if ( $height != "0" )
#set ( $munch = "\#set ( \$addh = \$addheight + ${height} )" )
#evaluate ( $munch )
#set ( $addheight = $addh - 22 )
#end
#set ( $rowcoord = $rowcoord + 25 )
#set ( $rowcoord = $rowcoord + $addheight )
#set ( $tabindex = $tabindex + 2 )
#end
End
#tag EndWindow

#tag WindowCode

	#tag Event
		Sub KeyUp(Key As String)
		  If Asc(key)=27 Then Me.Close
		  If Asc(key)=13 Then 
		    l_update = True
		    Me.Close
		  End If
		  ' $munch
		End Sub
	#tag EndEvent

	#tag Event
		Sub Open()
		  myOpen
		End Sub
	#tag EndEvent

	#tag Event

		Sub Close()
		  If l_update Then
		    Dim SQLstring As String
		    Dim ret As Boolean
		    #embed( "RECORD Before updating record" )  
#foreach( $field in $entity.attributes )
#set ( $fieldname = ${field.databaseName} )
#set ( ${fieldname} = ${fieldname.replace(" ","")} )
#if ( $field.databaseType=="DATE" )
				Dim m_${fieldname} As Date
				ret = ParseDate(${fieldname}TextField.Text, m_${fieldname})
#end
#if ( $field.databaseType=="DATETIME" )
				Dim m_${fieldname} As Date
				ret = ParseDate(${fieldname}TextField.Text, m_${fieldname})
#end
#if ( $field.databaseType=="TIMESTAMP" )
				Dim m_${fieldname} As Date
				ret = ParseDate(${fieldname}TextField.Text, m_${fieldname})
#end
#if ( $field.databaseType=="BIT" )
				Dim m_${fieldname} As Integer
		    If ${fieldname}CheckBox.Value Then m_${fieldname} = 1 Else m_${fieldname} = 0
#end
#if ( $field.databaseType=="BOOLEAN" )
				Dim m_${fieldname} As Integer
		    If ${fieldname}CheckBox.Value Then m_${fieldname} = 1 Else m_${fieldname} = 0
#end
#end
				'
		    SQLstring = _
		    "UPDATE ${entity.databaseTable} SET" + _
#foreach( $field in $entity.attributes )
#if ( $field.databaseName.toUpperCase() != $primary.toUpperCase() )
#set ( $fieldname = ${field.databaseName} )
#set ( $fieldname = ${fieldname.replace(" ","")} )
#if ( $field.databaseType=="TEXT" )
		    " ${fieldname}='" + Trim(${fieldname}TextField.Text) + "'#if( $foreach.hasNext ),#end" + _ 
#end
#if ( $field.databaseType=="TINYTEXT" )
		    " ${fieldname}='" + Trim(${fieldname}TextField.Text) + "'#if( $foreach.hasNext ),#end" + _ 
#end
#if ( $field.databaseType=="CHAR" )
		    " ${fieldname}='" + Trim(${fieldname}TextField.Text) + "'#if( $foreach.hasNext ),#end" + _ 
#end
#if ( $field.databaseType=="VARCHAR" )
		    " ${fieldname}='" + Trim(${fieldname}TextField.Text) + "'#if( $foreach.hasNext ),#end" + _ 
#end
#if ( $field.databaseType=="DOUBLE" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[#######.##]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="DECIMAL" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[#######.##]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="DATE" )
		    " ${fieldname}='" + Str(m_${fieldname}) + "'#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="DATETIME" )
		    " ${fieldname}='" + "1970-01-01 " + Trim(${fieldname}TextField.Text) + ":00" + "'#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="TIMESTAMP" )
		    " ${fieldname}='" + Trim(${fieldname}TextField.Text) + "'#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="YEAR" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[####]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="INT" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[#######]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="SMALLINT" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[-#####"]]#) + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="SMALLINT UNSIGNED" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[-#####"]]#) + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="TINYINT UNSIGNED" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[#####"]]#) + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="MEDIUMINT" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[-##########]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="MEDIUMINT UNSIGNED" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[##########]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="SIMPLEINT" )
		    " ${fieldname}=" + Str(Val(${fieldname}TextField.Text),"#[[-###########]]#") + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="BIT" )
		    " ${fieldname}=" + Str(m_${fieldname}) + "#if( $foreach.hasNext ),#end" + _
#end
#if ( $field.databaseType=="BOOLEAN" )
		    " ${fieldname}=" + Str(m_${fieldname}) + "#if( $foreach.hasNext ),#end" + _
#end
#end
#end 
		    " WHERE $primary = " + Str(l_record_id)
				' 
				' Primary key is "$primary"
		    ' TimeStamp is updated by MySQL (!) - no action 
		    '
		    System.DebugLog SQLString
		    g_db.SQLExecute(SQLString) 
		    If g_db.Error Then
		      g_status = g_db.ErrorMessage
		      MsgBox("SQL Error: " + g_db.ErrorMessage)
		    End If
		    #embed( "RECORD Before closing window" )  
		  End If
		End Sub
	#tag EndEvent

	#tag Method, Flags = &h0
		Sub myOpen()
		  Dim data As RecordSet
		  Dim ret As Boolean
		  #embed ("RECORD Before Open")
      '
      '  Dim Fields required
      '
#foreach( $field in $entity.attributes )
#set ( $fieldname = ${field.databaseName} )
#set ( ${fieldname} = ${fieldname.replace(" ","")} )
#if ( $field.databaseType=="DATE" )
		  Dim d_${fieldname} As New Date
#end
#if ( $field.databaseType=="DATETIME" )
		  Dim d_${fieldname} As New Date
#end
#if ( $field.databaseType=="TIMESTAMP" )
		  Dim d_${fieldname} As New Date
#end
#if ( $field.databaseType=="BIT" )
		  Dim d_${fieldname} As New CheckBox
#end
#if ( $field.databaseType=="BOOLEAN" )
		  Dim d_${fieldname} As New CheckBox
#end
#end
		  #embed( "RECORD Opening window" )
		  l_update = False
		  '
		  g_sql = "SELECT * FROM ${entity.databaseTable} WHERE $primary=" + Str(l_record_id) + ";"
		  System.DebugLog g_sql
		  data = g_db.SQLSelect(g_sql)
		  If g_db.Error Then
		    g_status = "DB Error: " + g_db.ErrorMessage
		    Return
		  End If
		  
		  If Not data.EOF Then
		    '
		    ' set date fields 
		    '
#foreach( $field in $entity.attributes )
#set ( $fieldname = ${field.databaseName} )
#set ( ${fieldname} = ${fieldname.replace(" ","")} )
#if ( $field.databaseType=="DATE" )
		    d_${fieldname} = data.Field("${fieldname}").DateValue
		    If d_${fieldname} = Nil Then 
		      ret = ParseDate("01/01/1900",d_${fieldname})
		    End If
#end
#if ( $field.databaseType=="DATETIME" )
		    d_${fieldname} = data.Field("${fieldname}").DateValue
		    If d_${fieldname} = Nil Then 
		      ret = ParseDate("01/01/1900",d_${fieldname})
		    End If
#end
#if ( $field.databaseType=="TIMESTAMP" )
		    d_${fieldname} = data.Field("${fieldname}").DateValue
		    If d_${fieldname} = Nil Then 
		      ret = ParseDate("01/01/1970",d_${fieldname})
		    End If
#end
#if ( $field.databaseType=="BIT" )
		    If data.Field("${fieldname}").BooleanValue = True Then
		      d_${fieldname}.Value = True
		    Else
		      d_${fieldname}.Value = False
		    End If
#end
#if ( $field.databaseType=="BOOLEAN" )
		    If data.Field("${fieldname}").BooleanValue = True Then
		      d_${fieldname}.Value = True
		    Else
		      d_${fieldname}.Value = False
		    End If
#end
#end
				#embed( "RECORD Before filling fields" )    
		    ' #foreach( $field in $entity.attributes ) #parse ("fieldvars.vm") #end
		    '
		    #embed( "RECORD After filling fields" )   
		  End If ' not data.EOF
		  data.Close
  	End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub myShow(record_id as integer)
		  l_record_id = record_id
		  Self.Show
		  Super.Constructor
		  
		End Sub
	#tag EndMethod


	#tag Property, Flags = &h0
		l_record_id As Integer
	#tag EndProperty

	#tag Property, Flags = &h0
		l_update As boolean
	#tag EndProperty

#tag EndWindowCode

#tag ViewBehavior
	#tag ViewProperty
		Name="Name"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Interfaces"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Super"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Width"
		Visible=true
		Group="Size"
		InitialValue="600"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Height"
		Visible=true
		Group="Size"
		InitialValue="400"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinWidth"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinHeight"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxWidth"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxHeight"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Frame"
		Visible=true
		Group="Frame"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Document"
			"1 - Movable Modal"
			"2 - Modal Dialog"
			"3 - Floating Window"
			"4 - Plain Box"
			"5 - Shadowed Box"
			"6 - Rounded Window"
			"7 - Global Floating Window"
			"8 - Sheet Window"
			"9 - Metal Window"
			"11 - Modeless Dialog"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="Title"
		Visible=true
		Group="Frame"
		InitialValue="Untitled"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="CloseButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Resizeable"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaximizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinimizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreenButton"
		Visible=true
		Group="Frame"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Composite"
		Group="OS X (Carbon)"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MacProcID"
		Group="OS X (Carbon)"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="ImplicitInstance"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Placement"
		Visible=true
		Group="Behavior"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Default"
			"1 - Parent Window"
			"2 - Main Screen"
			"3 - Parent Window Screen"
			"4 - Stagger"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="Visible"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LiveResize"
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreen"
		Group="Behavior"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="HasBackColor"
		Visible=true
		Group="Background"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="BackColor"
		Visible=true
		Group="Background"
		InitialValue="&hFFFFFF"
		Type="Color"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Backdrop"
		Visible=true
		Group="Background"
		Type="Picture"
		EditorType="Picture"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBar"
		Visible=true
		Group="Menus"
		Type="MenuBar"
		EditorType="MenuBar"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBarVisible"
		Visible=true
		Group="Deprecated"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
#tag EndViewBehavior